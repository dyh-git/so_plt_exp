
malloc_main:     file format elf64-x86-64


Disassembly of section .init:

0000000000000818 <_init>:
 818:	48 83 ec 08          	sub    $0x8,%rsp
 81c:	48 8b 05 c5 07 20 00 	mov    0x2007c5(%rip),%rax        # 200fe8 <__gmon_start__>
 823:	48 85 c0             	test   %rax,%rax
 826:	74 02                	je     82a <_init+0x12>
 828:	ff d0                	callq  *%rax
 82a:	48 83 c4 08          	add    $0x8,%rsp
 82e:	c3                   	retq   

Disassembly of section .plt:

0000000000000830 <.plt>:
 830:	ff 35 52 07 20 00    	pushq  0x200752(%rip)        # 200f88 <_GLOBAL_OFFSET_TABLE_+0x8>
 836:	ff 25 54 07 20 00    	jmpq   *0x200754(%rip)        # 200f90 <_GLOBAL_OFFSET_TABLE_+0x10>
 83c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000840 <strlen@plt>:
 840:	ff 25 52 07 20 00    	jmpq   *0x200752(%rip)        # 200f98 <strlen@GLIBC_2.2.5>
 846:	68 00 00 00 00       	pushq  $0x0
 84b:	e9 e0 ff ff ff       	jmpq   830 <.plt>

0000000000000850 <__stack_chk_fail@plt>:
 850:	ff 25 4a 07 20 00    	jmpq   *0x20074a(%rip)        # 200fa0 <__stack_chk_fail@GLIBC_2.4>
 856:	68 01 00 00 00       	pushq  $0x1
 85b:	e9 d0 ff ff ff       	jmpq   830 <.plt>

0000000000000860 <printf@plt>:
 860:	ff 25 42 07 20 00    	jmpq   *0x200742(%rip)        # 200fa8 <printf@GLIBC_2.2.5>
 866:	68 02 00 00 00       	pushq  $0x2
 86b:	e9 c0 ff ff ff       	jmpq   830 <.plt>

0000000000000870 <malloc_so@plt>:
 870:	ff 25 3a 07 20 00    	jmpq   *0x20073a(%rip)        # 200fb0 <malloc_so>
 876:	68 03 00 00 00       	pushq  $0x3
 87b:	e9 b0 ff ff ff       	jmpq   830 <.plt>

0000000000000880 <free_so@plt>:
 880:	ff 25 32 07 20 00    	jmpq   *0x200732(%rip)        # 200fb8 <free_so>
 886:	68 04 00 00 00       	pushq  $0x4
 88b:	e9 a0 ff ff ff       	jmpq   830 <.plt>

0000000000000890 <memcpy@plt>:
 890:	ff 25 2a 07 20 00    	jmpq   *0x20072a(%rip)        # 200fc0 <memcpy@GLIBC_2.14>
 896:	68 05 00 00 00       	pushq  $0x5
 89b:	e9 90 ff ff ff       	jmpq   830 <.plt>

00000000000008a0 <malloc_free_so@plt>:
 8a0:	ff 25 22 07 20 00    	jmpq   *0x200722(%rip)        # 200fc8 <malloc_free_so>
 8a6:	68 06 00 00 00       	pushq  $0x6
 8ab:	e9 80 ff ff ff       	jmpq   830 <.plt>

00000000000008b0 <sleep@plt>:
 8b0:	ff 25 1a 07 20 00    	jmpq   *0x20071a(%rip)        # 200fd0 <sleep@GLIBC_2.2.5>
 8b6:	68 07 00 00 00       	pushq  $0x7
 8bb:	e9 70 ff ff ff       	jmpq   830 <.plt>

Disassembly of section .plt.got:

00000000000008c0 <__cxa_finalize@plt>:
 8c0:	ff 25 32 07 20 00    	jmpq   *0x200732(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 8c6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000008d0 <_start>:
 8d0:	31 ed                	xor    %ebp,%ebp
 8d2:	49 89 d1             	mov    %rdx,%r9
 8d5:	5e                   	pop    %rsi
 8d6:	48 89 e2             	mov    %rsp,%rdx
 8d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 8dd:	50                   	push   %rax
 8de:	54                   	push   %rsp
 8df:	4c 8d 05 9a 02 00 00 	lea    0x29a(%rip),%r8        # b80 <__libc_csu_fini>
 8e6:	48 8d 0d 23 02 00 00 	lea    0x223(%rip),%rcx        # b10 <__libc_csu_init>
 8ed:	48 8d 3d 1d 01 00 00 	lea    0x11d(%rip),%rdi        # a11 <main>
 8f4:	ff 15 e6 06 20 00    	callq  *0x2006e6(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 8fa:	f4                   	hlt    
 8fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000900 <deregister_tm_clones>:
 900:	48 8d 3d 11 07 20 00 	lea    0x200711(%rip),%rdi        # 201018 <g_flag0>
 907:	55                   	push   %rbp
 908:	48 8d 05 09 07 20 00 	lea    0x200709(%rip),%rax        # 201018 <g_flag0>
 90f:	48 39 f8             	cmp    %rdi,%rax
 912:	48 89 e5             	mov    %rsp,%rbp
 915:	74 19                	je     930 <deregister_tm_clones+0x30>
 917:	48 8b 05 ba 06 20 00 	mov    0x2006ba(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 91e:	48 85 c0             	test   %rax,%rax
 921:	74 0d                	je     930 <deregister_tm_clones+0x30>
 923:	5d                   	pop    %rbp
 924:	ff e0                	jmpq   *%rax
 926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 92d:	00 00 00 
 930:	5d                   	pop    %rbp
 931:	c3                   	retq   
 932:	0f 1f 40 00          	nopl   0x0(%rax)
 936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 93d:	00 00 00 

0000000000000940 <register_tm_clones>:
 940:	48 8d 3d d1 06 20 00 	lea    0x2006d1(%rip),%rdi        # 201018 <g_flag0>
 947:	48 8d 35 ca 06 20 00 	lea    0x2006ca(%rip),%rsi        # 201018 <g_flag0>
 94e:	55                   	push   %rbp
 94f:	48 29 fe             	sub    %rdi,%rsi
 952:	48 89 e5             	mov    %rsp,%rbp
 955:	48 c1 fe 03          	sar    $0x3,%rsi
 959:	48 89 f0             	mov    %rsi,%rax
 95c:	48 c1 e8 3f          	shr    $0x3f,%rax
 960:	48 01 c6             	add    %rax,%rsi
 963:	48 d1 fe             	sar    %rsi
 966:	74 18                	je     980 <register_tm_clones+0x40>
 968:	48 8b 05 81 06 20 00 	mov    0x200681(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 96f:	48 85 c0             	test   %rax,%rax
 972:	74 0c                	je     980 <register_tm_clones+0x40>
 974:	5d                   	pop    %rbp
 975:	ff e0                	jmpq   *%rax
 977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 97e:	00 00 
 980:	5d                   	pop    %rbp
 981:	c3                   	retq   
 982:	0f 1f 40 00          	nopl   0x0(%rax)
 986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 98d:	00 00 00 

0000000000000990 <__do_global_dtors_aux>:
 990:	80 3d 8d 06 20 00 00 	cmpb   $0x0,0x20068d(%rip)        # 201024 <completed.7698>
 997:	75 2f                	jne    9c8 <__do_global_dtors_aux+0x38>
 999:	48 83 3d 57 06 20 00 	cmpq   $0x0,0x200657(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 9a0:	00 
 9a1:	55                   	push   %rbp
 9a2:	48 89 e5             	mov    %rsp,%rbp
 9a5:	74 0c                	je     9b3 <__do_global_dtors_aux+0x23>
 9a7:	48 8b 3d 5a 06 20 00 	mov    0x20065a(%rip),%rdi        # 201008 <__dso_handle>
 9ae:	e8 0d ff ff ff       	callq  8c0 <__cxa_finalize@plt>
 9b3:	e8 48 ff ff ff       	callq  900 <deregister_tm_clones>
 9b8:	c6 05 65 06 20 00 01 	movb   $0x1,0x200665(%rip)        # 201024 <completed.7698>
 9bf:	5d                   	pop    %rbp
 9c0:	c3                   	retq   
 9c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 9c8:	f3 c3                	repz retq 
 9ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000009d0 <frame_dummy>:
 9d0:	55                   	push   %rbp
 9d1:	48 89 e5             	mov    %rsp,%rbp
 9d4:	5d                   	pop    %rbp
 9d5:	e9 66 ff ff ff       	jmpq   940 <register_tm_clones>

00000000000009da <func>:
 9da:	55                   	push   %rbp
 9db:	48 89 e5             	mov    %rsp,%rbp
 9de:	48 83 ec 10          	sub    $0x10,%rsp
 9e2:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 9e9:	00 
 9ea:	bf 1e 00 00 00       	mov    $0x1e,%edi
 9ef:	e8 7c fe ff ff       	callq  870 <malloc_so@plt>
 9f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 9f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 9fc:	48 89 c7             	mov    %rax,%rdi
 9ff:	e8 7c fe ff ff       	callq  880 <free_so@plt>
 a04:	bf 1e 00 00 00       	mov    $0x1e,%edi
 a09:	e8 92 fe ff ff       	callq  8a0 <malloc_free_so@plt>
 a0e:	90                   	nop
 a0f:	c9                   	leaveq 
 a10:	c3                   	retq   

0000000000000a11 <main>:
 a11:	55                   	push   %rbp
 a12:	48 89 e5             	mov    %rsp,%rbp
 a15:	48 83 ec 40          	sub    $0x40,%rsp
 a19:	89 7d cc             	mov    %edi,-0x34(%rbp)
 a1c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
 a20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 a27:	00 00 
 a29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 a2d:	31 c0                	xor    %eax,%eax
 a2f:	48 8d 05 62 01 00 00 	lea    0x162(%rip),%rax        # b98 <_IO_stdin_used+0x8>
 a36:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 a3a:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 a41:	00 
 a42:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 a49:	00 
 a4a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 a51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 a55:	48 89 c7             	mov    %rax,%rdi
 a58:	e8 e3 fd ff ff       	callq  840 <strlen@plt>
 a5d:	48 8d 50 01          	lea    0x1(%rax),%rdx
 a61:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 a65:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 a69:	48 89 ce             	mov    %rcx,%rsi
 a6c:	48 89 c7             	mov    %rax,%rdi
 a6f:	e8 1c fe ff ff       	callq  890 <memcpy@plt>
 a74:	48 8d 0d a5 05 20 00 	lea    0x2005a5(%rip),%rcx        # 201020 <g_flag1>
 a7b:	48 8d 15 96 05 20 00 	lea    0x200596(%rip),%rdx        # 201018 <g_flag0>
 a82:	48 8d 35 87 05 20 00 	lea    0x200587(%rip),%rsi        # 201010 <g_count>
 a89:	48 8d 3d 18 01 00 00 	lea    0x118(%rip),%rdi        # ba8 <_IO_stdin_used+0x18>
 a90:	b8 00 00 00 00       	mov    $0x0,%eax
 a95:	e8 c6 fd ff ff       	callq  860 <printf@plt>
 a9a:	e8 3b ff ff ff       	callq  9da <func>
 a9f:	8b 05 73 05 20 00    	mov    0x200573(%rip),%eax        # 201018 <g_flag0>
 aa5:	83 c0 02             	add    $0x2,%eax
 aa8:	89 05 6a 05 20 00    	mov    %eax,0x20056a(%rip)        # 201018 <g_flag0>
 aae:	8b 05 6c 05 20 00    	mov    0x20056c(%rip),%eax        # 201020 <g_flag1>
 ab4:	83 c0 03             	add    $0x3,%eax
 ab7:	89 05 63 05 20 00    	mov    %eax,0x200563(%rip)        # 201020 <g_flag1>
 abd:	8b 15 5d 05 20 00    	mov    0x20055d(%rip),%edx        # 201020 <g_flag1>
 ac3:	8b 05 4f 05 20 00    	mov    0x20054f(%rip),%eax        # 201018 <g_flag0>
 ac9:	89 c6                	mov    %eax,%esi
 acb:	48 8d 3d f8 00 00 00 	lea    0xf8(%rip),%rdi        # bca <_IO_stdin_used+0x3a>
 ad2:	b8 00 00 00 00       	mov    $0x0,%eax
 ad7:	e8 84 fd ff ff       	callq  860 <printf@plt>
 adc:	bf 0a 00 00 00       	mov    $0xa,%edi
 ae1:	e8 ca fd ff ff       	callq  8b0 <sleep@plt>
 ae6:	b8 00 00 00 00       	mov    $0x0,%eax
 aeb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 aef:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 af6:	00 00 
 af8:	74 05                	je     aff <main+0xee>
 afa:	e8 51 fd ff ff       	callq  850 <__stack_chk_fail@plt>
 aff:	c9                   	leaveq 
 b00:	c3                   	retq   
 b01:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 b08:	00 00 00 
 b0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000b10 <__libc_csu_init>:
 b10:	41 57                	push   %r15
 b12:	41 56                	push   %r14
 b14:	49 89 d7             	mov    %rdx,%r15
 b17:	41 55                	push   %r13
 b19:	41 54                	push   %r12
 b1b:	4c 8d 25 3e 02 20 00 	lea    0x20023e(%rip),%r12        # 200d60 <__frame_dummy_init_array_entry>
 b22:	55                   	push   %rbp
 b23:	48 8d 2d 3e 02 20 00 	lea    0x20023e(%rip),%rbp        # 200d68 <__init_array_end>
 b2a:	53                   	push   %rbx
 b2b:	41 89 fd             	mov    %edi,%r13d
 b2e:	49 89 f6             	mov    %rsi,%r14
 b31:	4c 29 e5             	sub    %r12,%rbp
 b34:	48 83 ec 08          	sub    $0x8,%rsp
 b38:	48 c1 fd 03          	sar    $0x3,%rbp
 b3c:	e8 d7 fc ff ff       	callq  818 <_init>
 b41:	48 85 ed             	test   %rbp,%rbp
 b44:	74 20                	je     b66 <__libc_csu_init+0x56>
 b46:	31 db                	xor    %ebx,%ebx
 b48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 b4f:	00 
 b50:	4c 89 fa             	mov    %r15,%rdx
 b53:	4c 89 f6             	mov    %r14,%rsi
 b56:	44 89 ef             	mov    %r13d,%edi
 b59:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 b5d:	48 83 c3 01          	add    $0x1,%rbx
 b61:	48 39 dd             	cmp    %rbx,%rbp
 b64:	75 ea                	jne    b50 <__libc_csu_init+0x40>
 b66:	48 83 c4 08          	add    $0x8,%rsp
 b6a:	5b                   	pop    %rbx
 b6b:	5d                   	pop    %rbp
 b6c:	41 5c                	pop    %r12
 b6e:	41 5d                	pop    %r13
 b70:	41 5e                	pop    %r14
 b72:	41 5f                	pop    %r15
 b74:	c3                   	retq   
 b75:	90                   	nop
 b76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 b7d:	00 00 00 

0000000000000b80 <__libc_csu_fini>:
 b80:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000b84 <_fini>:
 b84:	48 83 ec 08          	sub    $0x8,%rsp
 b88:	48 83 c4 08          	add    $0x8,%rsp
 b8c:	c3                   	retq   
